; -----------------------------------------------------------------------------
; XXTEA Machine Code UDF
; Purpose: Provide The Machine Code Version of XXTEA Algorithm In AutoIt
; Author: Ward
; -----------------------------------------------------------------------------

#Include-once
#Include <Memory.au3>

Global $_XTEnc_CodeBuffer, $_XTEnc_CodeBufferMemory
Global $_XTDec_CodeBuffer, $_XTDec_CodeBufferMemory

Func _XTEnc_Exit()
	$_XTEnc_CodeBuffer = 0
	_MemVirtualFree($_XTEnc_CodeBufferMemory, 0, $MEM_RELEASE)
EndFunc

Func _XTDec_Exit()
	$_XTDec_CodeBuffer = 0
	_MemVirtualFree($_XTDec_CodeBufferMemory, 0, $MEM_RELEASE)
EndFunc

Func _XXTEA_Encrypt($Key, $Data)
	If Not IsDllStruct($_XTEnc_CodeBuffer) Then
		If @AutoItX64 Then
			Local $Opcode = '0x
		Else
			Local $Opcode = '0x
		EndIf
		$Opcode = Binary($Opcode)

		$_XTEnc_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
		$_XTEnc_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_XTEnc_CodeBufferMemory)
		DllStructSetData($_XTEnc_CodeBuffer, 1, $Opcode)
		OnAutoItExitRegister("_XTEnc_Exit")
	EndIf

	$Data = Binary($Data)
	Local $DataLen = BinaryLen($Data)
	If $DataLen = 0 Then
		Return SetError(1, 0, Binary(""))
	ElseIf $DataLen < 8 Then
		$DataLen = 8
	EndIf

	Local $V = DllStructCreate("byte[" & Ceiling($DataLen / 4) * 4 & "]")
	DllStructSetData($V, 1, $Data)

	Local $K = DllStructCreate("byte[16]")
	DllStructSetData($K, 1, $Key)

	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_XTEnc_CodeBuffer), _
													"ptr", DllStructGetPtr($V), _
													"uint", Ceiling($DataLen / 4), _
													"ptr", DllStructGetPtr($K), _
													"int", 0)

	Return DllStructGetData($V, 1)
EndFunc

Func _XXTEA_Decrypt($Key, $Data)
	If Not IsDllStruct($_XTDec_CodeBuffer) Then
		If @AutoItX64 Then
			Local $Opcode = '0x
		Else
			Local $Opcode = '0x
		EndIf
		$Opcode = Binary($Opcode)

		$_XTDec_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
		$_XTDec_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_XTDec_CodeBufferMemory)
		DllStructSetData($_XTDec_CodeBuffer, 1, $Opcode)
		OnAutoItExitRegister("_XTDec_Exit")
	EndIf

	$Data = Binary($Data)
	Local $DataLen = BinaryLen($Data)
	If $DataLen = 0 Then Return SetError(1, 0, Binary(""))

	Local $V = DllStructCreate("byte[" & Ceiling($DataLen / 4) * 4 & "]")
	DllStructSetData($V, 1, $Data)

	Local $K = DllStructCreate("byte[16]")
	DllStructSetData($K, 1, $Key)

	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_XTDec_CodeBuffer), _
													"ptr", DllStructGetPtr($V), _
													"uint", Ceiling($DataLen / 4), _
													"ptr", DllStructGetPtr($K), _
													"int", 0)

	Return DllStructGetData($V, 1)
EndFunc

Func _XXTEA_Encrypt_Pad($Key, $Data)
	$Data = Binary($Data)
	Local $DataLen = BinaryLen($Data), $DataPad

	Switch(Mod($DataLen, 4))
	Case 0
		$DataPad = Binary("0x80000000")
	Case 1
		$DataPad = Binary("0x800000")
	Case 2
		$DataPad = Binary("0x8000")
	Case 3
		$DataPad = Binary("0x80")
	EndSwitch
	Return _XXTEA_Encrypt($Key, $Data & $DataPad)
EndFunc

Func _XXTEA_Decrypt_Pad($Key, $Data)
	$Data = _XXTEA_Decrypt($Key, $Data)
	Local $DataLen = BinaryLen($Data), $i
	For $i = $DataLen To $DataLen - 8 Step -1
		If BinaryMid($Data, $i, 1) = Binary("0x80") Then
			$Data = BinaryMid($Data, 1, $i - 1)
			ExitLoop
		EndIf
	Next
	Return $Data
EndFunc
